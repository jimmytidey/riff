package {	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.events.*;	import flash.utils.*;	import flash.display.*; 	import flash.utils.describeType;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.Font;	import flash.text.AntiAliasType;	import com.adobe.serialization.json.JSON;	import flash.media.Sound;		public class SoundObjects extends MovieClip {			public function make(_stage) {						var fileList:Object; //holds all the json data						//get context			var loadContext:LoadContext= new LoadContext();			_stage.addChild(loadContext);			var user_name = loadContext.userName();			var project_name = loadContext.projectName();									//get list of all sounds present			var list_url:String = "http://localhost:88/riff/html/mk2/file_list.php?project_name="+project_name;			var requester:URLRequest = new URLRequest();			var loader:URLLoader = new URLLoader();				requester.url=list_url;			loader.load(requester);			loader.addEventListener(Event.COMPLETE, decodeJSON);						//read list			function decodeJSON(event:Event) {				fileList =JSON.decode(loader.data);				makeObjects(fileList['files']); 			}						function makeObjects(files:Object) {				var top_position = 100; 				var left_position = 100;								for each (var file:String in files) {					Mp3 = new Sound();					soundURL = 'http://riff.jimmytidey.co.uk/mk2/projects/'+user_name+'/'+project_name+'/'+file;					Mp3.load(new URLRequest(soundURL));					Mp3.addEventListener(ProgressEvent.PROGRESS, totalUploadPercent);					Mp3.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);					var fileMC:MovieClip  = new MovieClip();					fileMC.x = left_position;										fileMC.y = top_position;					_stage.addChild(fileMC);										var nameTextField:TextField  = new TextField();					nameTextField.text = file;					fileMC.addChild(nameTextField);										top_position +=20;				}			}						function totalUploadPercent(event:ProgressEvent) { 				//trace("progressHandler: " + event);			}						function errorHandler(errorEvent:IOErrorEvent):void {				trace("The sound could not be loaded: " + errorEvent.text);			}					}	}}